public class Solution {
    public int MaxDistToClosest(int[] seats) {
        
        int j = 0;
        int current = 0;
        IDictionary<int, int> list = new Dictionary<int, int>();
        
        for (int i = 0; i < seats.Length; i++)
        {
            if (seats[i] == 1)
            {
                j = 0;
                
                if (seats[0] != 1 && !list.ContainsKey(0))
                {
                    list.Add(0, i*2);
                }
                
                list.Add(i, j);
                current = i; 
            }        
            else if (list.Count > 0 && seats[i] != 1)
            {
                j++;
                list[current] = seats[seats.Length-1] != 1 && i == seats.Length-1 ? ((seats.Length - current) - 1)*2 : list[current] = j;    
            }       
        }    
        
        var results = list.Values.Max() % 2 == 0 ? list.Values.Max() / 2 : (list.Values.Max() / 2) + 1 ;

        return results; 
    }
}